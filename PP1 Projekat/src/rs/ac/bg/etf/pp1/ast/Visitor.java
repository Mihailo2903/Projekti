// generated with ast extension for cup
// version 0.8
// 17/0/2023 17:47:54


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(HasElse HasElse);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(Parameter Parameter);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(Constant Constant);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(ParameterList ParameterList);
    public void visit(Assignop Assignop);
    public void visit(CondTermList CondTermList);
    public void visit(FactorList FactorList);
    public void visit(Addop Addop);
    public void visit(DeclPart DeclPart);
    public void visit(MethodFieldList MethodFieldList);
    public void visit(ConditionIf ConditionIf);
    public void visit(Factor Factor);
    public void visit(CondFactList CondFactList);
    public void visit(ConstDeclPart ConstDeclPart);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(DesignatorStatementPart DesignatorStatementPart);
    public void visit(ClassMethodList ClassMethodList);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(DesignatorStatementList DesignatorStatementList);
    public void visit(VarDeclPart VarDeclPart);
    public void visit(StmtList StmtList);
    public void visit(ExprList ExprList);
    public void visit(IsExtended IsExtended);
    public void visit(VarDeclList VarDeclList);
    public void visit(ReturnTypeIdent ReturnTypeIdent);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(FuncParams FuncParams);
    public void visit(ClassVarList ClassVarList);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(DesignatorOperation DesignatorOperation);
    public void visit(FormPars FormPars);
    public void visit(ClassMethods ClassMethods);
    public void visit(ModOperator ModOperator);
    public void visit(DivisionOperator DivisionOperator);
    public void visit(MulOperator MulOperator);
    public void visit(MinusOperator MinusOperator);
    public void visit(PlusOperator PlusOperator);
    public void visit(LessEqualOperator LessEqualOperator);
    public void visit(LessOperator LessOperator);
    public void visit(GreaterEqualOperator GreaterEqualOperator);
    public void visit(GreaterOperator GreaterOperator);
    public void visit(NotEqualOperator NotEqualOperator);
    public void visit(EqualsOperator EqualsOperator);
    public void visit(AssignOperator AssignOperator);
    public void visit(Label Label);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorWord DesignatorWord);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(FactorNewObjNoParams FactorNewObjNoParams);
    public void visit(FactorNewObjParams FactorNewObjParams);
    public void visit(FactorNewArray FactorNewArray);
    public void visit(FactorSingleExpression FactorSingleExpression);
    public void visit(FactorCharConstant FactorCharConstant);
    public void visit(FactorBoolConstant FactorBoolConstant);
    public void visit(FactorNumConstant FactorNumConstant);
    public void visit(FactorSingleDesignator FactorSingleDesignator);
    public void visit(FactorFuncCallNoParams FactorFuncCallNoParams);
    public void visit(FactorFuncCallParams FactorFuncCallParams);
    public void visit(SingleNegativeFactor SingleNegativeFactor);
    public void visit(SingleFactor SingleFactor);
    public void visit(FactorsList FactorsList);
    public void visit(Term Term);
    public void visit(SingleTerm SingleTerm);
    public void visit(TermsList TermsList);
    public void visit(CondFactExpressionRelop CondFactExpressionRelop);
    public void visit(CondFactExpression CondFactExpression);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(CondFactsList CondFactsList);
    public void visit(CondTerm CondTerm);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(CondTermsList CondTermsList);
    public void visit(Condition Condition);
    public void visit(Expr Expr);
    public void visit(SingleExpression SingleExpression);
    public void visit(ExpressionList ExpressionList);
    public void visit(ActPars ActPars);
    public void visit(NoSingleDesignator NoSingleDesignator);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(SingleDesignatorStatement SingleDesignatorStatement);
    public void visit(DesigStatementList DesigStatementList);
    public void visit(FunctionNoParameters FunctionNoParameters);
    public void visit(FunctionParameters FunctionParameters);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorFuncCall DesignatorFuncCall);
    public void visit(DesignatorAssignError DesignatorAssignError);
    public void visit(DesignatorAssignArray DesignatorAssignArray);
    public void visit(DesignatorAssignSimple DesignatorAssignSimple);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(DesignStatementOperation DesignStatementOperation);
    public void visit(ElseWrapper ElseWrapper);
    public void visit(NoElseStatement NoElseStatement);
    public void visit(ElseStatement ElseStatement);
    public void visit(ErrorConditionIf ErrorConditionIf);
    public void visit(RegularConditionIf RegularConditionIf);
    public void visit(WhileWrapper WhileWrapper);
    public void visit(WhileBeg WhileBeg);
    public void visit(ForBegin ForBegin);
    public void visit(ForEachStatement ForEachStatement);
    public void visit(BraceStatement BraceStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(PrintNoParamStatement PrintNoParamStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ReturnNoParamStatement ReturnNoParamStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(WhileStatement WhileStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesignStatement DesignStatement);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementList StatementList);
    public void visit(ErrorFunctionparameter ErrorFunctionparameter);
    public void visit(ArrayMethodParameter ArrayMethodParameter);
    public void visit(VarMethodParameter VarMethodParameter);
    public void visit(SingleMethodParameter SingleMethodParameter);
    public void visit(MethodParameters MethodParameters);
    public void visit(NoMethodParameterList NoMethodParameterList);
    public void visit(MethodParametersList MethodParametersList);
    public void visit(NoMethodFieldsDeclaration NoMethodFieldsDeclaration);
    public void visit(MethodFieldsDeclaration MethodFieldsDeclaration);
    public void visit(ReturnVoid ReturnVoid);
    public void visit(ReturnType ReturnType);
    public void visit(Method_Declaration Method_Declaration);
    public void visit(NoMethodDeclarationList NoMethodDeclarationList);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(NoClassMethodDeclList NoClassMethodDeclList);
    public void visit(ClassMethodsDeclList ClassMethodsDeclList);
    public void visit(NoClassMethodsDeclarations NoClassMethodsDeclarations);
    public void visit(ClassMethodsDeclarations ClassMethodsDeclarations);
    public void visit(NoClassVarsDeclarations NoClassVarsDeclarations);
    public void visit(ClassVarsDeclarations ClassVarsDeclarations);
    public void visit(ClassBody ClassBody);
    public void visit(NotExtended NotExtended);
    public void visit(Extended Extended);
    public void visit(TypeClass TypeClass);
    public void visit(Class_Declaration Class_Declaration);
    public void visit(ErrorVariableDeclaration ErrorVariableDeclaration);
    public void visit(ArrayVariableDecl ArrayVariableDecl);
    public void visit(VariableDecl VariableDecl);
    public void visit(SingleVarDecl SingleVarDecl);
    public void visit(ListVarDecl ListVarDecl);
    public void visit(TypeVar TypeVar);
    public void visit(Var_Declaration Var_Declaration);
    public void visit(Type Type);
    public void visit(BoolConstant BoolConstant);
    public void visit(CharConstant CharConstant);
    public void visit(IntegerConstant IntegerConstant);
    public void visit(ConstantDecl ConstantDecl);
    public void visit(SingleConstDecl SingleConstDecl);
    public void visit(ListConstDecl ListConstDecl);
    public void visit(TypeConst TypeConst);
    public void visit(Const_Declaration Const_Declaration);
    public void visit(DeclarationClass DeclarationClass);
    public void visit(DeclarationConst DeclarationConst);
    public void visit(DeclarationVar DeclarationVar);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(DeclarationList DeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
