INFO  15:05:52,803 - Compiling source file: C:\Users\Mico\eclipse-workspace\Projekat_PP1\test\semantikaFinal.mj
INFO  15:05:52,842 - #2 program
INFO  15:05:52,843 - #48 Prog
INFO  15:05:52,843 - #7 const
INFO  15:05:52,843 - #48 int
INFO  15:05:52,844 - #48 ci1
INFO  15:05:52,844 - #33 =
INFO  15:05:52,844 - #47 3
INFO  15:05:52,844 - #38 ,
INFO  15:05:52,845 - #48 ci2
INFO  15:05:52,845 - #33 =
INFO  15:05:52,845 - #47 2
INFO  15:05:52,845 - #37 ;
INFO  15:05:52,845 - #7 const
INFO  15:05:52,845 - #48 bool
INFO  15:05:52,845 - #48 cb1
INFO  15:05:52,845 - #33 =
INFO  15:05:52,845 - #50 true
INFO  15:05:52,845 - #38 ,
INFO  15:05:52,845 - #48 cb2
INFO  15:05:52,845 - #33 =
INFO  15:05:52,846 - #50 false
INFO  15:05:52,846 - #37 ;
INFO  15:05:52,846 - #48 int
INFO  15:05:52,846 - #48 a
INFO  15:05:52,846 - #38 ,
INFO  15:05:52,847 - #48 b
INFO  15:05:52,847 - #37 ;
INFO  15:05:52,847 - #48 bool
INFO  15:05:52,847 - #48 n
INFO  15:05:52,847 - #38 ,
INFO  15:05:52,847 - #48 m
INFO  15:05:52,848 - #38 ,
INFO  15:05:52,848 - #48 v
INFO  15:05:52,848 - #37 ;
INFO  15:05:52,848 - #48 int
INFO  15:05:52,848 - #48 niz
INFO  15:05:52,848 - #45 [
INFO  15:05:52,848 - #46 ]
INFO  15:05:52,848 - #37 ;
INFO  15:05:52,848 - #48 bool
INFO  15:05:52,848 - #48 bniz
INFO  15:05:52,848 - #45 [
INFO  15:05:52,848 - #46 ]
INFO  15:05:52,848 - #37 ;
INFO  15:05:52,848 - #41 {
INFO  15:05:52,848 - #15 void
INFO  15:05:52,848 - #48 main
INFO  15:05:52,848 - #43 (
INFO  15:05:52,849 - #44 )
INFO  15:05:52,849 - #48 int
INFO  15:05:52,850 - #48 a
INFO  15:05:52,850 - #37 ;
INFO  15:05:52,850 - #41 {
INFO  15:05:52,850 - #48 niz
INFO  15:05:52,850 - #33 =
INFO  15:05:52,850 - #11 new
INFO  15:05:52,851 - #48 int
INFO  15:05:52,851 - #45 [
INFO  15:05:52,851 - #47 2
INFO  15:05:52,851 - #46 ]
INFO  15:05:52,852 - #37 ;
INFO  15:05:52,852 - #14 return
INFO  15:05:52,854 - #37 ;
INFO  15:05:52,854 - #42 }
INFO  15:05:52,854 - #42 }
INFO  15:05:52,858 - Program(
  ProgName(
   Prog
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarations(
              ) [NoDeclarations]
              DeclarationConst(
                Const_Declaration(
                  TypeConst(
                    Type(
                     int
                    ) [Type]
                  ) [TypeConst]
                  ListConstDecl(
                    SingleConstDecl(
                      ConstantDecl(
                       ci1
                        IntegerConstant(
                         3
                        ) [IntegerConstant]
                      ) [ConstantDecl]
                    ) [SingleConstDecl]
                    ConstantDecl(
                     ci2
                      IntegerConstant(
                       2
                      ) [IntegerConstant]
                    ) [ConstantDecl]
                  ) [ListConstDecl]
                ) [Const_Declaration]
              ) [DeclarationConst]
            ) [DeclarationList]
            DeclarationConst(
              Const_Declaration(
                TypeConst(
                  Type(
                   bool
                  ) [Type]
                ) [TypeConst]
                ListConstDecl(
                  SingleConstDecl(
                    ConstantDecl(
                     cb1
                      BoolConstant(
                       true
                      ) [BoolConstant]
                    ) [ConstantDecl]
                  ) [SingleConstDecl]
                  ConstantDecl(
                   cb2
                    BoolConstant(
                     false
                    ) [BoolConstant]
                  ) [ConstantDecl]
                ) [ListConstDecl]
              ) [Const_Declaration]
            ) [DeclarationConst]
          ) [DeclarationList]
          DeclarationVar(
            Var_Declaration(
              TypeVar(
                Type(
                 int
                ) [Type]
              ) [TypeVar]
              ListVarDecl(
                SingleVarDecl(
                  VariableDecl(
                   a
                  ) [VariableDecl]
                ) [SingleVarDecl]
                VariableDecl(
                 b
                ) [VariableDecl]
              ) [ListVarDecl]
            ) [Var_Declaration]
          ) [DeclarationVar]
        ) [DeclarationList]
        DeclarationVar(
          Var_Declaration(
            TypeVar(
              Type(
               bool
              ) [Type]
            ) [TypeVar]
            ListVarDecl(
              ListVarDecl(
                SingleVarDecl(
                  VariableDecl(
                   n
                  ) [VariableDecl]
                ) [SingleVarDecl]
                VariableDecl(
                 m
                ) [VariableDecl]
              ) [ListVarDecl]
              VariableDecl(
               v
              ) [VariableDecl]
            ) [ListVarDecl]
          ) [Var_Declaration]
        ) [DeclarationVar]
      ) [DeclarationList]
      DeclarationVar(
        Var_Declaration(
          TypeVar(
            Type(
             int
            ) [Type]
          ) [TypeVar]
          SingleVarDecl(
            ArrayVariableDecl(
             niz
            ) [ArrayVariableDecl]
          ) [SingleVarDecl]
        ) [Var_Declaration]
      ) [DeclarationVar]
    ) [DeclarationList]
    DeclarationVar(
      Var_Declaration(
        TypeVar(
          Type(
           bool
          ) [Type]
        ) [TypeVar]
        SingleVarDecl(
          ArrayVariableDecl(
           bniz
          ) [ArrayVariableDecl]
        ) [SingleVarDecl]
      ) [Var_Declaration]
    ) [DeclarationVar]
  ) [DeclarationList]
  MethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    Method_Declaration(
      ReturnVoid(
       main
      ) [ReturnVoid]
      NoMethodParameterList(
      ) [NoMethodParameterList]
      MethodFieldsDeclaration(
        NoMethodFieldsDeclaration(
        ) [NoMethodFieldsDeclaration]
        Var_Declaration(
          TypeVar(
            Type(
             int
            ) [Type]
          ) [TypeVar]
          SingleVarDecl(
            VariableDecl(
             a
            ) [VariableDecl]
          ) [SingleVarDecl]
        ) [Var_Declaration]
      ) [MethodFieldsDeclaration]
      StatementList(
        StatementList(
          NoStatementList(
          ) [NoStatementList]
          DesignStatement(
            DesignatorStatementAssign(
              DesignatorAssignSimple(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                AssignOperator(
                ) [AssignOperator]
                Expr(
                  SingleTerm(
                    Term(
                      SingleFactor(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          Expr(
                            SingleTerm(
                              Term(
                                SingleFactor(
                                  FactorNumConstant(
                                   2
                                  ) [FactorNumConstant]
                                ) [SingleFactor]
                              ) [Term]
                            ) [SingleTerm]
                          ) [Expr]
                        ) [FactorNewArray]
                      ) [SingleFactor]
                    ) [Term]
                  ) [SingleTerm]
                ) [Expr]
              ) [DesignatorAssignSimple]
            ) [DesignatorStatementAssign]
          ) [DesignStatement]
        ) [StatementList]
        ReturnNoParamStatement(
        ) [ReturnNoParamStatement]
      ) [StatementList]
    ) [Method_Declaration]
  ) [MethodDeclarationList]
) [Program]
INFO  15:05:52,858 - ===================================
INFO  15:05:52,860 - Upotreba promenljive niz, Var, arr of int, 5, 0 na liniji 12
INFO  15:05:52,861 - Parsiranje uspeno
INFO  15:05:52,861 - ===================================
